Terminals unused in grammar

   MOD_ASSIGN
   MOD
   SHORT
   LONG
   STRING


State 44 conflicts: 1 shift/reduce
State 50 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId ASSIGN simpleExpression

   11 varDecId: IDENTIFIER
   12         | IDENTIFIER '[' INT_CONSTANT ']'

   13 typeSpecifier: typeSpecifier pointer
   14              | INT
   15              | VOID
   16              | CHAR

   17 pointer: MULTIPLY pointer
   18        | MULTIPLY

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement
   20               | IDENTIFIER '(' params ')' statement

   21 params: paramList
   22       | %empty

   23 paramList: paramList ',' paramTypeList
   24          | paramTypeList

   25 paramTypeList: typeSpecifier paramId

   26 paramId: IDENTIFIER
   27        | IDENTIFIER '[' ']'

   28 statement: expressionStmt
   29          | compoundStmt
   30          | selectionStmt
   31          | iterationStmt
   32          | jumpStmt
   33          | returnStmt
   34          | breakStmt
   35          | varDeclaration

   36 compoundStmt: '{' statementList '}'

   37 statementList: statementList statement
   38              | %empty

   39 expressionStmt: expression ';'
   40               | ';'

   41 selectionStmt: IF '(' simpleExpression ')' statement
   42              | IF '(' simpleExpression ')' statement ELSE statement

   43 iterationStmt: WHILE '(' simpleExpression ')' statement
   44              | DO statement WHILE '(' expression ')' ';'
   45              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   46 optExpression: expression
   47              | %empty

   48 jumpStmt: GOTO IDENTIFIER ';'
   49         | CONTINUE ';'

   50 returnStmt: RETURN ';'
   51           | RETURN expression

   52 breakStmt: BREAK ';'

   53 expression: mutable ASSIGN expression
   54           | mutable ADD_ASSIGN expression
   55           | mutable SUB_ASSIGN expression
   56           | mutable MUL_ASSIGN expression
   57           | mutable DIV_ASSIGN expression
   58           | mutable INCREMENT
   59           | mutable DECREMENT
   60           | simpleExpression

   61 simpleExpression: simpleExpression LG_OR andExpression
   62                 | andExpression

   63 andExpression: andExpression LG_AND unaryRelExpression
   64              | unaryRelExpression

   65 unaryRelExpression: NOT unaryRelExpression
   66                   | relExpression

   67 relExpression: sumExpression GREATER_THAN sumExpression
   68              | sumExpression LESSER_THAN sumExpression
   69              | sumExpression LESS_EQ sumExpression
   70              | sumExpression GREATER_EQ sumExpression
   71              | sumExpression NOT_EQ sumExpression
   72              | sumExpression EQUAL sumExpression
   73              | sumExpression

   74 sumExpression: sumExpression ADD term
   75              | sumExpression SUBTRACT term
   76              | term

   77 term: term MULTIPLY unaryExpression
   78     | term DIVIDE unaryExpression
   79     | unaryExpression

   80 unaryExpression: ADD unaryExpression
   81                | SUBTRACT unaryExpression
   82                | factor

   83 factor: immutable
   84       | mutable

   85 mutable: IDENTIFIER
   86        | mutable '[' expression ']'

   87 immutable: '(' expression ')'
   88          | call
   89          | const_type

   90 call: IDENTIFIER '(' args ')'

   91 args: argList
   92     | %empty

   93 argList: argList ',' expression
   94        | expression

   95 const_type: DEC_CONSTANT
   96           | INT_CONSTANT
   97           | HEX_CONSTANT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 20 41 42 43 44 45 87 90
')' (41) 19 20 41 42 43 44 45 87 90
',' (44) 7 23 93
';' (59) 6 39 40 44 45 48 49 50 52
'[' (91) 12 27 86
']' (93) 12 27 86
'{' (123) 36
'}' (125) 36
error (256)
ADD (258) 74 80
SUBTRACT (259) 75 81
MULTIPLY (260) 17 18 77
DIVIDE (261) 78
ASSIGN (262) 10 53
ADD_ASSIGN (263) 54
SUB_ASSIGN (264) 55
MUL_ASSIGN (265) 56
DIV_ASSIGN (266) 57
MOD_ASSIGN (267)
MOD (268)
GREATER_THAN (269) 67
LESSER_THAN (270) 68
LESS_EQ (271) 69
GREATER_EQ (272) 70
NOT_EQ (273) 71
EQUAL (274) 72
VOID (275) 15
IF (276) 41 42
ELSE (277) 42
FOR (278) 45
DO (279) 44
WHILE (280) 43 44
GOTO (281) 48
BREAK (282) 52
CONTINUE (283) 49
RETURN (284) 50 51
INT (285) 14
SHORT (286)
LONG (287)
CHAR (288) 16
LG_OR (289) 61
LG_AND (290) 63
NOT (291) 65
DECREMENT (292) 59
INCREMENT (293) 58
HEX_CONSTANT (294) 97
DEC_CONSTANT (295) 95
INT_CONSTANT (296) 12 96
STRING (297)
IDENTIFIER (298) 11 12 19 20 26 27 48 85 90
IFX (299)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
declarationList (55)
    on left: 2 3, on right: 1 2
declaration (56)
    on left: 4 5, on right: 2 3
varDeclaration (57)
    on left: 6, on right: 4 35
varDeclList (58)
    on left: 7 8, on right: 6 7
varDeclInitialize (59)
    on left: 9 10, on right: 7 8
varDecId (60)
    on left: 11 12, on right: 9 10
typeSpecifier (61)
    on left: 13 14 15 16, on right: 6 13 19 25
pointer (62)
    on left: 17 18, on right: 13 17
funDeclaration (63)
    on left: 19 20, on right: 5
params (64)
    on left: 21 22, on right: 19 20
paramList (65)
    on left: 23 24, on right: 21 23
paramTypeList (66)
    on left: 25, on right: 23 24
paramId (67)
    on left: 26 27, on right: 25
statement (68)
    on left: 28 29 30 31 32 33 34 35, on right: 19 20 37 41 42 43 44
    45
compoundStmt (69)
    on left: 36, on right: 29
statementList (70)
    on left: 37 38, on right: 36 37
expressionStmt (71)
    on left: 39 40, on right: 28
selectionStmt (72)
    on left: 41 42, on right: 30
iterationStmt (73)
    on left: 43 44 45, on right: 31
optExpression (74)
    on left: 46 47, on right: 45
jumpStmt (75)
    on left: 48 49, on right: 32
returnStmt (76)
    on left: 50 51, on right: 33
breakStmt (77)
    on left: 52, on right: 34
expression (78)
    on left: 53 54 55 56 57 58 59 60, on right: 39 44 46 51 53 54 55
    56 57 86 87 93 94
simpleExpression (79)
    on left: 61 62, on right: 10 41 42 43 60 61
andExpression (80)
    on left: 63 64, on right: 61 62 63
unaryRelExpression (81)
    on left: 65 66, on right: 63 64 65
relExpression (82)
    on left: 67 68 69 70 71 72 73, on right: 66
sumExpression (83)
    on left: 74 75 76, on right: 67 68 69 70 71 72 73 74 75
term (84)
    on left: 77 78 79, on right: 74 75 76 77 78
unaryExpression (85)
    on left: 80 81 82, on right: 77 78 79 80 81
factor (86)
    on left: 83 84, on right: 82
mutable (87)
    on left: 85 86, on right: 53 54 55 56 57 58 59 84 86
immutable (88)
    on left: 87 88 89, on right: 83
call (89)
    on left: 90, on right: 88
args (90)
    on left: 91 92, on right: 90
argList (91)
    on left: 93 94, on right: 91 93
const_type (92)
    on left: 95 96 97, on right: 89


State 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


State 1

   15 typeSpecifier: VOID .

    $default  reduce using rule 15 (typeSpecifier)


State 2

   14 typeSpecifier: INT .

    $default  reduce using rule 14 (typeSpecifier)


State 3

   16 typeSpecifier: CHAR .

    $default  reduce using rule 16 (typeSpecifier)


State 4

   20 funDeclaration: IDENTIFIER . '(' params ')' statement

    '('  shift, and go to state 11


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 13
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


State 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer
   19 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' statement

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18
    pointer            go to state 19


State 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 11

   20 funDeclaration: IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 22 (params)

    typeSpecifier  go to state 20
    params         go to state 21
    paramList      go to state 22
    paramTypeList  go to state 23


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 14

   17 pointer: MULTIPLY . pointer
   18        | MULTIPLY .

    $default  reduce using rule 18 (pointer)

    pointer  go to state 24


State 15

   11 varDecId: IDENTIFIER .
   12         | IDENTIFIER . '[' INT_CONSTANT ']'
   19 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' statement

    '['  shift, and go to state 25
    '('  shift, and go to state 26

    $default  reduce using rule 11 (varDecId)


State 16

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 27
    ';'  shift, and go to state 28


State 17

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 18

    9 varDeclInitialize: varDecId .
   10                  | varDecId . ASSIGN simpleExpression

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 9 (varDeclInitialize)


State 19

   13 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 13 (typeSpecifier)


State 20

   13 typeSpecifier: typeSpecifier . pointer
   25 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 30

    pointer  go to state 19
    paramId  go to state 31


State 21

   20 funDeclaration: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 32


State 22

   21 params: paramList .
   23 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 33

    $default  reduce using rule 21 (params)


State 23

   24 paramList: paramTypeList .

    $default  reduce using rule 24 (paramList)


State 24

   17 pointer: MULTIPLY pointer .

    $default  reduce using rule 17 (pointer)


State 25

   12 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 34


State 26

   19 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 22 (params)

    typeSpecifier  go to state 20
    params         go to state 35
    paramList      go to state 22
    paramTypeList  go to state 23


State 27

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 36

    varDeclInitialize  go to state 37
    varDecId           go to state 18


State 28

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 29

   10 varDeclInitialize: varDecId ASSIGN . simpleExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    simpleExpression    go to state 46
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 30

   26 paramId: IDENTIFIER .
   27        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 58

    $default  reduce using rule 26 (paramId)


State 31

   25 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 25 (paramTypeList)


State 32

   20 funDeclaration: IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 71
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 33

   23 paramList: paramList ',' . paramTypeList

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 20
    paramTypeList  go to state 82


State 34

   12 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 83


State 35

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 84


State 36

   11 varDecId: IDENTIFIER .
   12         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 11 (varDecId)


State 37

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 38

   80 unaryExpression: ADD . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryExpression  go to state 85
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 39

   81 unaryExpression: SUBTRACT . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryExpression  go to state 86
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 40

   65 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryRelExpression  go to state 87
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 41

   97 const_type: HEX_CONSTANT .

    $default  reduce using rule 97 (const_type)


State 42

   95 const_type: DEC_CONSTANT .

    $default  reduce using rule 95 (const_type)


State 43

   96 const_type: INT_CONSTANT .

    $default  reduce using rule 96 (const_type)


State 44

   85 mutable: IDENTIFIER .
   90 call: IDENTIFIER . '(' args ')'

    '('  shift, and go to state 88

    '('       [reduce using rule 85 (mutable)]
    $default  reduce using rule 85 (mutable)


State 45

   87 immutable: '(' . expression ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 89
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 46

   10 varDeclInitialize: varDecId ASSIGN simpleExpression .
   61 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90

    $default  reduce using rule 10 (varDeclInitialize)


State 47

   62 simpleExpression: andExpression .
   63 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 91

    $default  reduce using rule 62 (simpleExpression)


State 48

   64 andExpression: unaryRelExpression .

    $default  reduce using rule 64 (andExpression)


State 49

   66 unaryRelExpression: relExpression .

    $default  reduce using rule 66 (unaryRelExpression)


State 50

   67 relExpression: sumExpression . GREATER_THAN sumExpression
   68              | sumExpression . LESSER_THAN sumExpression
   69              | sumExpression . LESS_EQ sumExpression
   70              | sumExpression . GREATER_EQ sumExpression
   71              | sumExpression . NOT_EQ sumExpression
   72              | sumExpression . EQUAL sumExpression
   73              | sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 92
    SUBTRACT      shift, and go to state 93
    GREATER_THAN  shift, and go to state 94
    LESSER_THAN   shift, and go to state 95
    LESS_EQ       shift, and go to state 96
    GREATER_EQ    shift, and go to state 97
    NOT_EQ        shift, and go to state 98
    EQUAL         shift, and go to state 99

    ADD       [reduce using rule 73 (relExpression)]
    SUBTRACT  [reduce using rule 73 (relExpression)]
    $default  reduce using rule 73 (relExpression)


State 51

   76 sumExpression: term .
   77 term: term . MULTIPLY unaryExpression
   78     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 76 (sumExpression)


State 52

   79 term: unaryExpression .

    $default  reduce using rule 79 (term)


State 53

   82 unaryExpression: factor .

    $default  reduce using rule 82 (unaryExpression)


State 54

   84 factor: mutable .
   86 mutable: mutable . '[' expression ']'

    '['  shift, and go to state 102

    $default  reduce using rule 84 (factor)


State 55

   83 factor: immutable .

    $default  reduce using rule 83 (factor)


State 56

   88 immutable: call .

    $default  reduce using rule 88 (immutable)


State 57

   89 immutable: const_type .

    $default  reduce using rule 89 (immutable)


State 58

   27 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 103


State 59

   41 selectionStmt: IF . '(' simpleExpression ')' statement
   42              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 104


State 60

   45 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 105


State 61

   44 iterationStmt: DO . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 106
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 62

   43 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 107


State 63

   48 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 108


State 64

   52 breakStmt: BREAK . ';'

    ';'  shift, and go to state 109


State 65

   49 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 110


State 66

   50 returnStmt: RETURN . ';'
   51           | RETURN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 111
    '('           shift, and go to state 45

    expression          go to state 112
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 67

   40 expressionStmt: ';' .

    $default  reduce using rule 40 (expressionStmt)


State 68

   36 compoundStmt: '{' . statementList '}'

    $default  reduce using rule 38 (statementList)

    statementList  go to state 113


State 69

   35 statement: varDeclaration .

    $default  reduce using rule 35 (statement)


State 70

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 36

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18
    pointer            go to state 19


State 71

   20 funDeclaration: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 20 (funDeclaration)


State 72

   29 statement: compoundStmt .

    $default  reduce using rule 29 (statement)


State 73

   28 statement: expressionStmt .

    $default  reduce using rule 28 (statement)


State 74

   30 statement: selectionStmt .

    $default  reduce using rule 30 (statement)


State 75

   31 statement: iterationStmt .

    $default  reduce using rule 31 (statement)


State 76

   32 statement: jumpStmt .

    $default  reduce using rule 32 (statement)


State 77

   33 statement: returnStmt .

    $default  reduce using rule 33 (statement)


State 78

   34 statement: breakStmt .

    $default  reduce using rule 34 (statement)


State 79

   39 expressionStmt: expression . ';'

    ';'  shift, and go to state 114


State 80

   60 expression: simpleExpression .
   61 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90

    $default  reduce using rule 60 (expression)


State 81

   53 expression: mutable . ASSIGN expression
   54           | mutable . ADD_ASSIGN expression
   55           | mutable . SUB_ASSIGN expression
   56           | mutable . MUL_ASSIGN expression
   57           | mutable . DIV_ASSIGN expression
   58           | mutable . INCREMENT
   59           | mutable . DECREMENT
   84 factor: mutable .
   86 mutable: mutable . '[' expression ']'

    ASSIGN      shift, and go to state 115
    ADD_ASSIGN  shift, and go to state 116
    SUB_ASSIGN  shift, and go to state 117
    MUL_ASSIGN  shift, and go to state 118
    DIV_ASSIGN  shift, and go to state 119
    DECREMENT   shift, and go to state 120
    INCREMENT   shift, and go to state 121
    '['         shift, and go to state 102

    $default  reduce using rule 84 (factor)


State 82

   23 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 23 (paramList)


State 83

   12 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 12 (varDecId)


State 84

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 122
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 85

   80 unaryExpression: ADD unaryExpression .

    $default  reduce using rule 80 (unaryExpression)


State 86

   81 unaryExpression: SUBTRACT unaryExpression .

    $default  reduce using rule 81 (unaryExpression)


State 87

   65 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 65 (unaryRelExpression)


State 88

   90 call: IDENTIFIER '(' . args ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    $default  reduce using rule 92 (args)

    expression          go to state 123
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    args                go to state 124
    argList             go to state 125
    const_type          go to state 57


State 89

   87 immutable: '(' expression . ')'

    ')'  shift, and go to state 126


State 90

   61 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    andExpression       go to state 127
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 91

   63 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryRelExpression  go to state 128
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 92

   74 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    term             go to state 129
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 93

   75 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    term             go to state 130
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 94

   67 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 131
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 95

   68 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 132
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 96

   69 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 133
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 97

   70 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 134
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 98

   71 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 135
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 99

   72 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    sumExpression    go to state 136
    term             go to state 51
    unaryExpression  go to state 52
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 100

   77 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryExpression  go to state 137
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 101

   78 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    unaryExpression  go to state 138
    factor           go to state 53
    mutable          go to state 54
    immutable        go to state 55
    call             go to state 56
    const_type       go to state 57


State 102

   86 mutable: mutable '[' . expression ']'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 139
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 103

   27 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 27 (paramId)


State 104

   41 selectionStmt: IF '(' . simpleExpression ')' statement
   42              | IF '(' . simpleExpression ')' statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    simpleExpression    go to state 140
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 105

   45 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 141
    expression          go to state 142
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 106

   44 iterationStmt: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 143


State 107

   43 iterationStmt: WHILE '(' . simpleExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    simpleExpression    go to state 144
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 54
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 108

   48 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 145


State 109

   52 breakStmt: BREAK ';' .

    $default  reduce using rule 52 (breakStmt)


State 110

   49 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 49 (jumpStmt)


State 111

   50 returnStmt: RETURN ';' .

    $default  reduce using rule 50 (returnStmt)


State 112

   51 returnStmt: RETURN expression .

    $default  reduce using rule 51 (returnStmt)


State 113

   36 compoundStmt: '{' statementList . '}'
   37 statementList: statementList . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68
    '}'           shift, and go to state 146

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 147
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 114

   39 expressionStmt: expression ';' .

    $default  reduce using rule 39 (expressionStmt)


State 115

   53 expression: mutable ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 148
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 116

   54 expression: mutable ADD_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 149
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 117

   55 expression: mutable SUB_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 150
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 118

   56 expression: mutable MUL_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 151
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 119

   57 expression: mutable DIV_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 152
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 120

   59 expression: mutable DECREMENT .

    $default  reduce using rule 59 (expression)


State 121

   58 expression: mutable INCREMENT .

    $default  reduce using rule 58 (expression)


State 122

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 19 (funDeclaration)


State 123

   94 argList: expression .

    $default  reduce using rule 94 (argList)


State 124

   90 call: IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 153


State 125

   91 args: argList .
   93 argList: argList . ',' expression

    ','  shift, and go to state 154

    $default  reduce using rule 91 (args)


State 126

   87 immutable: '(' expression ')' .

    $default  reduce using rule 87 (immutable)


State 127

   61 simpleExpression: simpleExpression LG_OR andExpression .
   63 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 91

    $default  reduce using rule 61 (simpleExpression)


State 128

   63 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 63 (andExpression)


State 129

   74 sumExpression: sumExpression ADD term .
   77 term: term . MULTIPLY unaryExpression
   78     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 74 (sumExpression)


State 130

   75 sumExpression: sumExpression SUBTRACT term .
   77 term: term . MULTIPLY unaryExpression
   78     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 75 (sumExpression)


State 131

   67 relExpression: sumExpression GREATER_THAN sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 67 (relExpression)


State 132

   68 relExpression: sumExpression LESSER_THAN sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 68 (relExpression)


State 133

   69 relExpression: sumExpression LESS_EQ sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 69 (relExpression)


State 134

   70 relExpression: sumExpression GREATER_EQ sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 70 (relExpression)


State 135

   71 relExpression: sumExpression NOT_EQ sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 71 (relExpression)


State 136

   72 relExpression: sumExpression EQUAL sumExpression .
   74 sumExpression: sumExpression . ADD term
   75              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 72 (relExpression)


State 137

   77 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 77 (term)


State 138

   78 term: term DIVIDE unaryExpression .

    $default  reduce using rule 78 (term)


State 139

   86 mutable: mutable '[' expression . ']'

    ']'  shift, and go to state 155


State 140

   41 selectionStmt: IF '(' simpleExpression . ')' statement
   42              | IF '(' simpleExpression . ')' statement ELSE statement
   61 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90
    ')'    shift, and go to state 156


State 141

   45 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 157


State 142

   46 optExpression: expression .

    $default  reduce using rule 46 (optExpression)


State 143

   44 iterationStmt: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 158


State 144

   43 iterationStmt: WHILE '(' simpleExpression . ')' statement
   61 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90
    ')'    shift, and go to state 159


State 145

   48 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 48 (jumpStmt)


State 146

   36 compoundStmt: '{' statementList '}' .

    $default  reduce using rule 36 (compoundStmt)


State 147

   37 statementList: statementList statement .

    $default  reduce using rule 37 (statementList)


State 148

   53 expression: mutable ASSIGN expression .

    $default  reduce using rule 53 (expression)


State 149

   54 expression: mutable ADD_ASSIGN expression .

    $default  reduce using rule 54 (expression)


State 150

   55 expression: mutable SUB_ASSIGN expression .

    $default  reduce using rule 55 (expression)


State 151

   56 expression: mutable MUL_ASSIGN expression .

    $default  reduce using rule 56 (expression)


State 152

   57 expression: mutable DIV_ASSIGN expression .

    $default  reduce using rule 57 (expression)


State 153

   90 call: IDENTIFIER '(' args ')' .

    $default  reduce using rule 90 (call)


State 154

   93 argList: argList ',' . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 160
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 155

   86 mutable: mutable '[' expression ']' .

    $default  reduce using rule 86 (mutable)


State 156

   41 selectionStmt: IF '(' simpleExpression ')' . statement
   42              | IF '(' simpleExpression ')' . statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 161
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 157

   45 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 162
    expression          go to state 142
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 158

   44 iterationStmt: DO statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    expression          go to state 163
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 159

   43 iterationStmt: WHILE '(' simpleExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 164
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 160

   93 argList: argList ',' expression .

    $default  reduce using rule 93 (argList)


State 161

   41 selectionStmt: IF '(' simpleExpression ')' statement .
   42              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 165

    $default  reduce using rule 41 (selectionStmt)


State 162

   45 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 166


State 163

   44 iterationStmt: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 167


State 164

   43 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 43 (iterationStmt)


State 165

   42 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 168
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 166

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    '('           shift, and go to state 45

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 169
    expression          go to state 142
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 167

   44 iterationStmt: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 170


State 168

   42 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 42 (selectionStmt)


State 169

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 171


State 170

   44 iterationStmt: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 44 (iterationStmt)


State 171

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    VOID          shift, and go to state 1
    IF            shift, and go to state 59
    FOR           shift, and go to state 60
    DO            shift, and go to state 61
    WHILE         shift, and go to state 62
    GOTO          shift, and go to state 63
    BREAK         shift, and go to state 64
    CONTINUE      shift, and go to state 65
    RETURN        shift, and go to state 66
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 41
    DEC_CONSTANT  shift, and go to state 42
    INT_CONSTANT  shift, and go to state 43
    IDENTIFIER    shift, and go to state 44
    ';'           shift, and go to state 67
    '('           shift, and go to state 45
    '{'           shift, and go to state 68

    varDeclaration      go to state 69
    typeSpecifier       go to state 70
    statement           go to state 172
    compoundStmt        go to state 72
    expressionStmt      go to state 73
    selectionStmt       go to state 74
    iterationStmt       go to state 75
    jumpStmt            go to state 76
    returnStmt          go to state 77
    breakStmt           go to state 78
    expression          go to state 79
    simpleExpression    go to state 80
    andExpression       go to state 47
    unaryRelExpression  go to state 48
    relExpression       go to state 49
    sumExpression       go to state 50
    term                go to state 51
    unaryExpression     go to state 52
    factor              go to state 53
    mutable             go to state 81
    immutable           go to state 55
    call                go to state 56
    const_type          go to state 57


State 172

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 45 (iterationStmt)
